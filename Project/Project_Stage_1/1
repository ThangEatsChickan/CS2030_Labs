import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;

class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int numberOfCustomer = 0;
        double arrivalTime = 0;
        double completedTime = 0;
        ArrayList<Customer> customerList = new ArrayList<Customer>();
        ArrayList<Customer> holdingCustomerList = new ArrayList<Customer>();
        ArrayList<CustomerState> csList = new ArrayList<CustomerState>();
        ArrayList<Server> servingLogs = new ArrayList<Server>();
        Server s = new Server(1);
        String output = new String();
        while (scanner.hasNext() == true) {
            arrivalTime = scanner.nextDouble();
            numberOfCustomer++;
            Customer c = new Customer(arrivalTime, numberOfCustomer);
            Customer completedC = new Customer(completedTime, numberOfCustomer);
            State toggleState = State.ARRIVES;
            CustomerState cs = new CustomerState(c, toggleState);
            CustomerStateHandler2 csh = new CustomerStateHandler2(cs);
            customerList.add(c);
            csList.add(cs);
            if (numberOfCustomer == 1) {
                s = s.serve(c);
                cs = cs.toggleState(c, toggleState.SERVES);
                servingLogs.add(s);
                csList.add(cs); // add served log
                c = new Customer(c.completedServiceTime(), numberOfCustomer);
                cs = cs.toggleState(c, toggleState.DONE); // add done log
                csList.add(cs);
            } else {
                if (s.serve(c) == null) {
                    if (holdingCustomerList.size() == 0) {
                        cs = cs.toggleState (c, toggleState.WAITS);
                        holdingCustomerList.add(c);
                    } else {
                        servingLogs.add(s.serve(c));
                        cs = cs.toggleState(c, toggleState.LEAVES);
                    }
                } else {
                    if (holdingCustomerList.size() == 1) {
                        s = s.serve(holdingCustomerList.get(0));
                        servingLogs.add(s);
                        cs = cs.toggleState(holdingCustomerList.get(0), toggleState.SERVES);
                        csList.add(cs);
                        completedC = new Customer(holdingCustomerList.get(0).completedServiceTime(), holdingCustomerList.get(0).getCustomerID());
                        cs = cs.toggleState(completedC, toggleState.DONE);
                        System.out.println(csList.add(cs));
                        holdingCustomerList.remove(0); //remove pending customer
                        cs = cs.toggleState(c, toggleState.WAITS);
                        holdingCustomerList.add(c);
                    } else {
                        s = s.serve(c);
                        servingLogs.add(s);
                        cs = cs.toggleState(c, toggleState.SERVES);
                        csList.add(cs);    
                        c = new Customer(c.completedServiceTime(), numberOfCustomer);
                        cs = cs.toggleState(c, toggleState.DONE); // add done log
                    }
                }
                csList.add(cs);
            }
            if (scanner.hasNext() == false) { 
                System.out.println("YES!" + s.servingCustomer.completedServiceTime());
                if (holdingCustomerList.size() == 1) {
                    c = holdingCustomerList.get(0);
                    c = new Customer(s.servingCustomer.completedServiceTime(), c.getCustomerID());
                    s = s.serve(c);
                    servingLogs.add(s);
                    cs = cs.toggleState(c, toggleState.SERVES);
                    csList.add(cs);
                    completedC = new Customer(c.completedServiceTime(), c.getCustomerID());
                    cs = cs.toggleState(completedC, toggleState.DONE);
                    csList.add(cs);
                    holdingCustomerList.remove(0); //remove pending customer
                }
                csh.computeEvent(csList, numberOfCustomer);
                break;
            }
        }
        for (int a = 0; a < csList.size(); a++) {
            System.out.println(csList.get(a));
        }
        //for (int i = 0; i < customerList.size(); i++) {
            //System.out.println(customerList.get(i));
           // System.out.println(csList.get(2 * i));
            /*if (servingLogs.get(i) != null) {
                output = String.format("Customer served; next service @ %.3f", 
                customerList.get(i).completedServiceTime());
                System.out.println(output);
            } else {
                System.out.println("Customer leaves");
            }*/
            //System.out.println(csList.get((2 * i) + 1));
       // }
        System.out.println("Number of customers: " + numberOfCustomer);
    }
}
